<?php

function banner_blocks_views_api() {
  return array(
    'api' => 3.0,
  );
}

function banner_blocks_ctools_plugin_api($module, $api) {
  if ($module == 'ds' && $api == 'ds') {
    return array('version' => 1);
  }
}

function banner_blocks_ds_view_modes_info() {
  $ds_view_modes = array();

  $ds_view_mode = new StdClass;

  $ds_view_mode->disabled = FALSE;
  $ds_view_mode->api_version = 1;
  $ds_view_mode->view_mode = 'full_banner';
  $ds_view_mode->label = 'Full banner';
  $ds_view_mode->entities = array('banner' => 'banner');

  $ds_view_modes['full_banner'] = $ds_view_mode;

  return $ds_view_modes;
}

function banner_blocks_entity_info_alter(&$entity_info) {
  $entity_info['banner']['view modes']['full_banner'] = array(
    'label' => t('Full banner'),
    'custom settings' => TRUE,
  );
}

/**
 * @return mixed
 */
function banner_blocks_block_info() {
  $block_types = array(
    'slideshow' => array('tall', 'short'),
    'banner' => array('tall', 'short'),
  );

  $blocks = array();

  foreach ($block_types as $type => $sizes) {
    foreach ($sizes as $size) {
      $blocks["banner_blocks_".$type."_".$size] = array(
        'info' => t('Banner '.$type.' - '.$size),
        'cache' => DRUPAL_NO_CACHE,
      );
    }
  }

  return $blocks;
}

/**
 * @param string $delta
 * @return array
 */
function banner_blocks_block_view($delta = '') {
  $block_types = array(
    'slideshow' => array('tall', 'short'),
    'banner' => array('tall', 'short'),
  );

  $block = array();

  foreach ($block_types as $block_type => $sizes) {
    foreach ($sizes as $size) {
      $block_name = 'banner_blocks_'.$block_type.'_'.$size;
      if ($delta == $block_name) {
        $block['subject'] = '';
        $block['content'] = banner_blocks_call_content_function($block_type, array($size));
      }
    }
  }

  return $block;
}

function banner_blocks_call_content_function($block_type, $parameters) {
  $content = '';
  $function = 'banner_blocks_block_content_'.$block_type;
  if (function_exists($function)) {
    $content = call_user_func_array($function, $parameters);
  }

  return $content;
}

/**
 * @return mixed
 */
function banner_blocks_block_content_slideshow($size = 'short') {
  $ids = banner_blocks_get_active_slide_ids($size);

  $ids = implode(',', $ids);

  $view = views_get_view('banner_slideshow');
  $view->set_display('default');
  $view->set_arguments(array($ids));
  $view->pre_execute();
  $view->execute();

  return $view->render();
}

function banner_blocks_block_content_banner($size = 'short') {
  $banner = banner_blocks_get_active_banner($size);

  if (empty($banner)) {
    return '';
  }

  $rendered_entity = drupal_render(entity_view('banner', array($banner->id => $banner), 'default'));

  return $rendered_entity;
}

/**
 * @return array
 */
function banner_blocks_get_active_slide_ids($size = 'short') {
  $slides = banner_blocks_get_all_banners('slide_'.$size);

  $active_ids = array();

  foreach ($slides as $eid => $slide) {
    $specificity = 0;
    foreach (banner_blocks_get_paths($slide) as $path_pattern) {
      $exclude = banner_blocks_check_exclude($path_pattern);

      if (!banner_blocks_page_match($path_pattern)) {
        continue;
      }

      $wildcard_position = strrpos($path_pattern, '*');

      if ($wildcard_position >= $specificity || $wildcard_position === FALSE) {
        $active_ids[$eid] = !$exclude;
      }

      if ($wildcard_position === FALSE) {
        break;
      } else {
        $specificity = $wildcard_position;
      }
    }
  }

  return array_keys(array_filter($active_ids));
}

function banner_blocks_check_exclude(&$path_pattern) {
  $path_pattern = trim($path_pattern);

  $exclude = (substr($path_pattern, 0, 1) == '~');

  if ($exclude) {
    $path_pattern = substr($path_pattern, 1);
  }

  return $exclude;
}

function banner_blocks_get_active_banner($size = 'short') {
  $banners = banner_blocks_get_all_banners('banner_'.$size);

  $active_banner = array();

  foreach ($banners as $eid => $banner) {
    $specificity = 0;
    foreach (banner_blocks_get_paths($banner) as $path_pattern) {
      $exclude = banner_blocks_check_exclude($path_pattern);

      if ($exclude || !banner_blocks_page_match($path_pattern)) {
        continue;
      }

      $wildcard_position = strrpos($path_pattern, '*');

      if ($wildcard_position === FALSE) {
        return $banner;
      }

      if ($wildcard_position >= $specificity) {
        $specificity = $wildcard_position;
        $active_banner = $banner;
      }
    }
  }

  return $active_banner;
}

function banner_blocks_get_paths($banner) {
  $paths = field_get_items('banner', $banner, 'field_paths');
  $paths = explode("\n", $paths[0]['value']);

  return $paths;
}

function banner_blocks_page_match($pattern) {
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));

  // Compare the lowercase internal and lowercase path alias (if any).
  $page_match = drupal_match_path($path, $pattern);

  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $pattern);
  }

  return $page_match;
}

function banner_blocks_get_all_banners($bundle = '') {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'banner');

  if (!empty($bundle)) {
    $query->entityCondition('bundle', $bundle);
  }

  $result = $query->execute();

  if (empty($result['banner'])) {
    return null;
  }

  $banners = entity_load('banner', array_keys($result['banner']));

  return $banners;
}